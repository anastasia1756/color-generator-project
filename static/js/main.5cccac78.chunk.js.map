{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","index","useState","alert","setAlert","bcg","join","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","toast","success","console","log","type","value","onChange","target","placeholder","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAqB,GAAdD,EAAIE,OAAc,IAAMF,EAAMA,EAOxBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,ICwBvDC,EA3BK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAAY,EACpBC,oBAAS,GADW,mBACvCC,EADuC,KAChCC,EADgC,KAExCC,EAAMN,EAAIO,KAAK,KACff,EAAMG,EAAQ,WAAR,cAAYK,IAQxB,OANAQ,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBL,GAAS,KACR,KACH,OAAO,kBAAMM,aAAaF,MACzB,CAACL,IAEF,6BACEQ,UAAS,gBAAWV,EAAQ,IAAM,eAClCW,MAAO,CAAEC,gBAAgB,OAAD,OAASR,EAAT,MACxBS,QAAS,WACPV,GAAS,GACTW,UAAUC,UAAUC,UAAU1B,KAGhC,uBAAGoB,UAAU,iBAAiBX,EAA9B,KACA,uBAAGW,UAAU,eAAepB,GAC3BY,GAAS,uBAAGQ,UAAU,SAAb,yB,uBC0BDO,MA7Cf,WAAgB,IAAD,EACahB,mBAAS,IADtB,mBACNiB,EADM,KACCC,EADD,OAEalB,oBAAS,GAFtB,mBAENmB,EAFM,KAECC,EAFD,OAGWpB,mBAAS,IAAIqB,IAAO,WAAWC,IAAI,KAH9C,mBAGNC,EAHM,KAGAC,EAHA,KAkBb,OACE,oCACE,6BAASf,UAAU,aACjB,+CACA,0BAAMgB,SAjBS,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,IACnCE,EAAQI,GACRC,IAAMC,QAAQ,mBACd,MAAOX,GACPC,GAAS,GACTS,IAAMV,MAAM,2BACZY,QAAQC,IAAIb,MASR,2BACEc,KAAK,OACLC,MAAOjB,EACPkB,SAAU,SAACT,GAAD,OAAOR,EAASQ,EAAEU,OAAOF,QACnCG,YAAY,UACZ5B,UAAS,UAAKU,EAAQ,QAAU,QAElC,4BAAQV,UAAU,MAAMwB,KAAK,UAA7B,YAKJ,6BAASxB,UAAU,UAChBc,EAAKe,KAAI,SAACrB,EAAOlB,GAAR,OACR,kBAAC,EAAD,eAAawC,IAAKxC,GAAWkB,EAA7B,CAAoClB,MAAOA,SAG/C,kBAAC,IAAD,QCzCNyC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.5cccac78.chunk.js","sourcesContent":["function componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? '0' + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport default rgbToHex;\n","import React, { useState, useEffect } from \"react\";\nimport rgbToHex from \"./utils\";\n\nconst SingleColor = ({ rgb, weight, index }) => {\n  const [alert, setAlert] = useState(false);\n  const bcg = rgb.join(\",\");\n  const hex = rgbToHex(...rgb);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setAlert(false);\n    }, 3000);\n    return () => clearTimeout(timeout);\n  }, [alert]);\n  return (\n    <article\n      className={`color ${index > 10 && \"color-light\"}`}\n      style={{ backgroundColor: `rgb(${bcg})` }}\n      onClick={() => {\n        setAlert(true);\n        navigator.clipboard.writeText(hex);\n      }}\n    >\n      <p className=\"percent-value\">{weight}%</p>\n      <p className=\"color-value\">{hex}</p>\n      {alert && <p className=\"alert\">copied to clipboard</p>}\n    </article>\n  );\n};\n\nexport default SingleColor;\n","import React, { useState } from \"react\";\nimport SingleColor from \"./SingleColor\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\nimport Values from \"values.js\";\n\nfunction App() {\n  const [color, setColor] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [list, setList] = useState(new Values(\"#f15025\").all(10));\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    try {\n      let colors = new Values(color).all(10);\n      setList(colors);\n      toast.success(\"You got colors!\");\n    } catch (error) {\n      setError(true);\n      toast.error(\"Ooops, it's not a color\");\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <section className=\"container\">\n        <h3>color generator</h3>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={color}\n            onChange={(e) => setColor(e.target.value)}\n            placeholder=\"#f15025\"\n            className={`${error ? \"error\" : null}`}\n          />\n          <button className=\"btn\" type=\"submit\">\n            submit\n          </button>\n        </form>\n      </section>\n      <section className=\"colors\">\n        {list.map((color, index) => (\n          <SingleColor key={index} {...color} index={index} />\n        ))}\n      </section>\n      <Toaster />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}